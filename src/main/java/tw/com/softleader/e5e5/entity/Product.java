package tw.com.softleader.e5e5.entity;
// Generated 2015/12/14 �U�� 08:24:34 by Hibernate Tools 4.3.1.Final

import java.util.Arrays;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.transaction.Transactional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product", schema = "dbo", catalog = "EEIT82DB")
public class Product implements java.io.Serializable {

	private int id;
	private String name;
	private ProductCategory productCategory;
	private byte[] video;
	private User userByUserId;
	private Date postTime;
	private Date deadline;
	private String location;
	private String tradeWay;
	private String wishItem;
	private Character postStatus;
	private Integer clickTimes;

	// private Set<QuestionAndAnswer> questionAndAnswers = new HashSet<QuestionAndAnswer>(0);
	// private Set<Report> reports = new HashSet<Report>(0);
	// private Set<ProductPicture> productPictures = new HashSet<ProductPicture>(0);

	public Product() {
	}

	public Product(int id) {
		this.id = id;
	}

	public Product(int id, String name, ProductCategory productCategory, byte[] video, User userByUserId, Date postTime,
			Date deadline, String location, String tradeWay, String wishItem, Character postStatus,
			Character tradeStatus, Integer clickTimes, Exchange exchange, Product product, User userByItemOwnerId,
			Date tradeFinishedTime, String grade, Date gradeTime
	// Set<QuestionAndAnswer> questionAndAnswers, Set<Report> reports,
	// Set<ProductPicture> productPictures
	) {
		this.id = id;
		this.name = name;
		this.productCategory = productCategory;
		this.video = video;
		this.userByUserId = userByUserId;
		this.postTime = postTime;
		this.deadline = deadline;
		this.location = location;
		this.tradeWay = tradeWay;
		this.wishItem = wishItem;
		this.postStatus = postStatus;
		this.clickTimes = clickTimes;

		// this.questionAndAnswers = questionAndAnswers;
		// this.reports = reports;
		// this.productPictures = productPictures;
	}

	@Override
	public String toString() {
		return "Product [id=" + id + ", name=" + name + ", video=" + Arrays.toString(video) + ", postTime=" + postTime
				+ ", deadline=" + deadline + ", location=" + location + ", tradeWay=" + tradeWay + ", wishItem="
				+ wishItem + ", postStatus=" + postStatus + ", clickTimes=" + clickTimes + "]";
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "name", length = 30)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id", referencedColumnName = "id")
	@Transactional
	@JsonIgnoreProperties({ "hibernateLazyInitializer", "handler" })
	public ProductCategory getProductCategory() {
		return this.productCategory;
	}

	public void setProductCategory(ProductCategory productCategory) {
		this.productCategory = productCategory;
	}

	@Column(name = "video")
	public byte[] getVideo() {
		return this.video;
	}

	public void setVideo(byte[] video) {
		this.video = video;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", referencedColumnName = "id")
	@Transactional
	@JsonIgnoreProperties({ "hibernateLazyInitializer", "handler" })
	public User getUserByUserId() {
		return this.userByUserId;
	}

	public void setUserByUserId(User userByUserId) {
		this.userByUserId = userByUserId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "post_time", length = 23)
	public Date getPostTime() {
		return this.postTime;
	}

	public void setPostTime(Date postTime) {
		this.postTime = postTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "deadline", length = 23)
	public Date getDeadline() {
		return this.deadline;
	}

	public void setDeadline(Date deadline) {
		this.deadline = deadline;
	}

	@Column(name = "location", length = 50)
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@Column(name = "trade_way", length = 20)
	public String getTradeWay() {
		return this.tradeWay;
	}

	public void setTradeWay(String tradeWay) {
		this.tradeWay = tradeWay;
	}

	@Column(name = "wish_item", length = 200)
	public String getWishItem() {
		return this.wishItem;
	}

	public void setWishItem(String wishItem) {
		this.wishItem = wishItem;
	}

	@Column(name = "post_status", length = 1)
	public Character getPostStatus() {
		return this.postStatus;
	}

	public void setPostStatus(Character postStatus) {
		this.postStatus = postStatus;
	}

	@Column(name = "click_times")
	public Integer getClickTimes() {
		return this.clickTimes;
	}

	public void setClickTimes(Integer clickTimes) {
		this.clickTimes = clickTimes;
	}

	// @OneToMany(fetch = FetchType.LAZY, mappedBy = "product", cascade = {
	// CascadeType.REMOVE })
	// public Set<QuestionAndAnswer> getQuestionAndAnswers() {
	// return this.questionAndAnswers;
	// }
	//
	// public void setQuestionAndAnswers(Set<QuestionAndAnswer>
	// questionAndAnswers) {
	// this.questionAndAnswers = questionAndAnswers;
	// }
	//
	// @OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	// public Set<Report> getReports() {
	// return this.reports;
	// }
	//
	// public void setReports(Set<Report> reports) {
	// this.reports = reports;
	// }
	//
	// @OneToMany(fetch = FetchType.LAZY, mappedBy = "product", cascade = {
	// CascadeType.REMOVE })
	// public Set<ProductPicture> getProductPictures() {
	// return this.productPictures;
	// }
	//
	// public void setProductPictures(Set<ProductPicture> productPictures) {
	// this.productPictures = productPictures;
	// }
}
